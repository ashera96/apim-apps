{"apiSpec":{"serviceUrl":"https://localhost:8243/pizzashack/1.0.0", "tools":[{"name":"GET-pet_findByStatus", "description":"This API endpoint retrieves pets based on their status. The status values can be 'available', 'pending', or 'sold'.. This tool invokes a HTTP GET resource", "method":"GET", "path":"/pet/findByStatus", "parameters":{"status":{"location":"query", "description":"Status values that need to be considered for filter", "required":false, "style":"form", "explode":true, "schema":{"type":"string", "enum":["available", "pending", "sold"], "default":"available"}}}}, {"name":"POST-pet", "description":"This API endpoint allows you to add a new pet to the store by providing the pet details in the request body.. This tool invokes a HTTP POST resource", "method":"POST", "path":"/pet", "requestBody":{"mediaType":"application/json", "schema":{"type":"object", "required":["category", "id", "name", "photoUrls", "status", "tags"], "properties":{"id":{"type":"integer"}, "name":{"type":"string"}, "category":{"type":"object", "required":["id", "name"], "properties":{"id":{"type":"integer"}, "name":{"type":"string"}}}, "photoUrls":{"type":"array", "items":{"type":"string"}}, "tags":{"type":"array", "items":{"type":"object", "required":["id", "name"], "properties":{"id":{"type":"integer"}, "name":{"type":"string"}}}}, "status":{"type":"string", "enum":["available", "pending", "sold"]}}}}}, {"name":"PUT-pet", "description":"This API endpoint enables you to update an existing pet in the store by providing the pet ID and updated details in the request body.. This tool invokes a HTTP PUT resource", "method":"PUT", "path":"/pet", "requestBody":{"mediaType":"application/json", "schema":{"type":"object", "required":["category", "id", "name", "photoUrls", "status", "tags"], "properties":{"id":{"type":"integer"}, "name":{"type":"string"}, "category":{"type":"object", "required":["id", "name"], "properties":{"id":{"type":"integer"}, "name":{"type":"string"}}}, "photoUrls":{"type":"array", "items":{"type":"string"}}, "tags":{"type":"array", "items":{"type":"object", "required":["id", "name"], "properties":{"id":{"type":"integer"}, "name":{"type":"string"}}}}, "status":{"type":"string", "enum":["available", "pending", "sold"]}}}}}, {"name":"POST-user", "description":"This API endpoint allows you to create a new user by providing the user object in the request body.. This tool invokes a HTTP POST resource", "method":"POST", "path":"/user", "requestBody":{"mediaType":"application/json", "schema":{"type":"object", "required":["email", "firstName", "id", "lastName", "password", "phone", "userStatus", "username"], "properties":{"id":{"type":"integer"}, "username":{"type":"string"}, "firstName":{"type":"string"}, "lastName":{"type":"string"}, "email":{"type":"string"}, "password":{"type":"string"}, "phone":{"type":"string"}, "userStatus":{"type":"integer"}}}}}, {"name":"GET-user_username", "description":"This API endpoint retrieves a user based on their username.. This tool invokes a HTTP GET resource", "method":"GET", "path":"/user/{username}", "parameters":{"username":{"location":"path", "description":"The name that needs to be fetched. Use user1 for testing. ", "required":true, "style":"simple", "explode":false, "schema":{"type":"string"}}}}, {"name":"GET-pet_findByTags", "description":"This API endpoint retrieves pets based on their tags. Multiple tags can be provided as comma-separated strings.. This tool invokes a HTTP GET resource", "method":"GET", "path":"/pet/findByTags", "parameters":{"tags":{"location":"query", "description":"Tags to filter by", "required":false, "style":"form", "explode":true, "schema":{"type":"array", "items":{"type":"string"}}}}}, {"name":"GET-pet_petId", "description":"This API endpoint retrieves a pet based on its ID.. This tool invokes a HTTP GET resource", "method":"GET", "path":"/pet/{petId}", "parameters":{"petId":{"location":"path", "description":"ID of pet to return", "required":true, "style":"simple", "explode":false, "schema":{"type":"integer"}}}}, {"name":"POST-pet_petId", "description":"This API endpoint allows you to update a pet in the store using form data, by providing the pet ID, name, and status.. This tool invokes a HTTP POST resource", "method":"POST", "path":"/pet/{petId}", "parameters":{"petId":{"location":"path", "description":"ID of pet that needs to be updated", "required":true, "style":"simple", "explode":false, "schema":{"type":"integer"}}, "name":{"location":"query", "description":"Name of pet that needs to be updated", "required":false, "style":"form", "explode":true, "schema":{"type":"string"}}, "status":{"location":"query", "description":"Status of pet that needs to be updated", "required":false, "style":"form", "explode":true, "schema":{"type":"string"}}}}, {"name":"DELETE-pet_petId", "description":"This API endpoint allows you to delete a pet from the store by providing the pet ID.. This tool invokes a HTTP DELETE resource", "method":"DELETE", "path":"/pet/{petId}", "parameters":{"petId":{"location":"path", "description":"Pet id to delete", "required":true, "style":"simple", "explode":false, "schema":{"type":"integer"}}}}]}, "queries":[{"scenario":"Invoke all resources of the API", "query":"Invoke all resources"}, {"scenario":"Invoke a single resource of the API", "query":"Get user by user name with the username 'user1'."}, {"scenario":"Invoke an action involving multiple resources", "query":"Add a new pet to the store with the name 'doggie' and update its status to 'available'."}]}
